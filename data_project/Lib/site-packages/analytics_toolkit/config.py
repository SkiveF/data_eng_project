"""Configuration is stored here: database names, default paths to folders, etc."""
import sys
from dataclasses import dataclass
from pathlib import Path


@dataclass
class YellowbrickHosts:
    """
    Names of widely used Yellowbrick hosts.

    Args:
        default (str): Yellowbrick default host.
        cameo (str): Yellowbrick cameo host.
    """

    default: str = "prodybc"
    cameo: str = "prodybb"


@dataclass
class YellowbrickDatabases:
    """
    Names of widely used Yellowbrick databases.

    Args:
        French databases:
        prod (str): manufacturers production tables.
        save (str): tables that are used in multiple projects.
        temp (str): temporary tables for a project.
        crf (str): Carrefour tables.
        itm_alog (str): Intermarche ALOG tables.
        itm_dlog (str): Intermarche DLOG tables.
        match (str): Supermarchés Match tables.
        mpx (str): Monoprix tables.
        su (str): Systeme U tables.

        Cameo databases:
        cameo (str): cameo database. When accessing this database, you might need to specify
            host="prodybb" and username=os.getenv("CAMEO_USERNAME") (same for pwd), as well as
            integrate your cameo credentials in your environment variables.

        Italian databases:
        prod_it (str): manufacturers production tables.
        save_it (str): tables that are used in multiple projects.
        temp_it (str): temporary tables for a project.
        ai_it (str): Ali tables.
        ar_it (str): Arca S.p.A. tables.
        bd_it (str): Brendolan tables.
        be_it (str): Bennet tables.
        cm_it (str): Cedimarche tables.
        di_it (str): Dimar tables.
        gm_it (str): GMF tables.
        itm_alog_it (str): Italmark ALOG tables.
        itm_dlog_it (str): Italmark DLOG tables.
        la_it (str): L'Abbondenza tables.
        me_it (str): Megamark tables.
        mi_it (str): Mida3 tables.
        su_it (str): Superemme tables.
        un_it (str): Unicomm tables.
        re_it (str): Realco tables
        ri_it (str): Realco Insight tables

        UK databases:
        prod_uk (str): manufacturers production tables.
        save_uk (str): tables that are used in multiple projects.
        temp_uk (str): temporary tables for a project.
        sain_uk (str): Sainsbury's tables.
        morr_uk (str): Morrisons tables.

        German databases:
        prod_de (str): manufacturers production tables.
        save_de (str): tables that are used in multiple projects.
        temp_de (str): temporary tables for a project.
        citt_de (str): CITTI tables.
        edek_de (str): Edeka Südwest tables.
        buen_de (str): Buenting tables.
    """

    # French databases
    prod: str = "py3frpa1"
    save: str = "py3frsa1"
    temp: str = "py3frta1"
    crf: str = "py3fracf"
    itm_alog: str = "py3fraim"
    itm_dlog: str = "py3frain"
    match: str = "py3frasm"
    mpx: str = "py3framp"
    su: str = "py3frasu"

    # Cameo Databases
    cameo: str = "pycfrm4c"

    # Italian databases
    prod_it: str = "py3itpa1"
    save_it: str = "py3itsa1"
    temp_it: str = "py3itta1"
    ai_it: str = "py3itaai"
    ar_it: str = "py3itaar"
    bd_it: str = "py3itabd"
    be_it: str = "py3itabe"
    cm_it: str = "py3itacm"
    di_it: str = "py3itadi"
    gm_it: str = "py3itagm"
    itm_alog_it: str = "py3itaim"
    itm_dlog_it: str = "py3itain"
    la_it: str = "py3itala"
    me_it: str = "py3itame"
    mi_it: str = "py3itami"
    su_it: str = "py3itasu"
    un_it: str = "py3itaun"
    re_it: str = "py3itare"
    ri_it: str = "py3itari"
    pac_it: str = "py3itapc"

    # UK databases
    prod_uk: str = "py3ukpa1"
    save_uk: str = "py3uksa1"
    temp_uk: str = "py3ukta1"
    sain_uk: str = "py3ukajs"
    morr_uk: str = "py3ukamo"

    # German databases
    prod_de: str = "py3depa1"
    save_de: str = "py3desa1"
    temp_de: str = "py3deta1"
    citt_de: str = "py3deaci"
    edek_de: str = "py3deaed"
    buen_de: str = "py3deabu"


@dataclass
class DefaultPaths:
    """
    Default drive paths depending on the system (Linux, Windows).

    Args:
        app_shared (Path): Default path to applications/shared (J:/ Drive)
        etudes_shared (Path): Default path to etudes/shared (I:/ Drive)
        nas_shared (Path): Default path to //prod_storage drive.
        sas_gpfs (Path): Default path to the SAS storage (Linux only!)
    """

    app_shared: Path = Path()
    etudes_shared: Path = Path()
    nas_shared: Path = Path()
    sas_gpfs: Path = Path()

    def __post_init__(self):
        nas_shared = {
            "win32": Path("//prod_storage1/NasShare"),
            "linux": Path("/nas_share"),
        }
        app_shared = {
            "win32": Path("//FDCPFSWD01/Applications/Shared"),
            "linux": Path("/applications_shared"),
        }
        etudes_shared = {
            "win32": Path("//fdcpfrfswv01/cmcfrdfsroot/Etudes/Shared"),
            "linux": Path("/etudes_shared"),
        }
        sas_gpfs = {
            "win32": Path("//does/not/exist"),  # Cannot connect to SAS via Windows!!
            "linux": Path("/sas_gpfs"),
        }
        self.nas_shared = nas_shared[sys.platform]
        self.app_shared = app_shared[sys.platform]
        self.etudes_shared = etudes_shared[sys.platform]
        self.sas_gpfs = sas_gpfs[sys.platform]
